name: DEV PUSH - Build, Test, Scan, Release, Deploy

# OBJECTIVE: Code is ready, time to deploy to the dev environment!

on:
  push:
    branches: dev
jobs:
  run:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Step 1 - Checkout branch from GitHub 
        uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Step 2 - Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Step 2.5 - Test
        run: |
          mvn -B test --file pom.xml
    
      - name: Step 3 - Build Maven Project
        run: |
          mvn -B package --file pom.xml
          mkdir staging && cp target/*.jar staging

      - name: Step 4 - Set up a cache for Maven
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Step 5 - Persist workflow data as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: github-actions-artifact
          path: staging
      
      - name: Step 6 - Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws:iam::874191363693:role/CloudFormationRole
          aws-region: us-east-1
        
      - name: Step 7 - Release
        run: |
          aws s3 sync . s3://test-app-staging-env

      - name: Step 8 - Deploy
        run: |
          echo This is where we deploy via terraform